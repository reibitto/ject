package ject.ja.text.ja

import scala.annotation.tailrec

object Romaji {
  lazy val table: Map[String, String] = Map(
    "a"    -> "あ",
    "ba"   -> "ば",
    "be"   -> "べ",
    "bi"   -> "び",
    "bo"   -> "ぼ",
    "bu"   -> "ぶ",
    "bya"  -> "びゃ",
    "bye"  -> "びぇ",
    "byi"  -> "びぃ",
    "byo"  -> "びょ",
    "byu"  -> "びゅ",
    "ca"   -> "か",
    "ce"   -> "せ",
    "cha"  -> "ちゃ",
    "che"  -> "ちぇ",
    "chi"  -> "ち",
    "cho"  -> "ちょ",
    "chu"  -> "ちゅ",
    "ci"   -> "し",
    "co"   -> "こ",
    "cu"   -> "く",
    "cya"  -> "ちゃ",
    "cye"  -> "ちぇ",
    "cyi"  -> "ちぃ",
    "cyo"  -> "ちょ",
    "cyu"  -> "ちゅ",
    "d'i"  -> "でぃ",
    "d'u"  -> "どぅ",
    "d'yu" -> "でゅ",
    "da"   -> "だ",
    "de"   -> "で",
    "dha"  -> "でゃ",
    "dhe"  -> "でぇ",
    "dhi"  -> "でぃ",
    "dho"  -> "でょ",
    "dhu"  -> "でゅ",
    "di"   -> "ぢ",
    "do"   -> "ど",
    "du"   -> "づ",
    "dwa"  -> "どぁ",
    "dwe"  -> "どぇ",
    "dwi"  -> "どぃ",
    "dwo"  -> "どぉ",
    "dwu"  -> "どぅ",
    "dya"  -> "ぢゃ",
    "dye"  -> "ぢぇ",
    "dyi"  -> "ぢぃ",
    "dyo"  -> "ぢょ",
    "dyu"  -> "ぢゅ",
    "e"    -> "え",
    "fa"   -> "ふぁ",
    "fe"   -> "ふぇ",
    "fi"   -> "ふぃ",
    "fo"   -> "ふぉ",
    "fu"   -> "ふ",
    "fya"  -> "ふゃ",
    "fyo"  -> "ふょ",
    "fyu"  -> "ふゅ",
    "ga"   -> "が",
    "ge"   -> "げ",
    "gi"   -> "ぎ",
    "go"   -> "ご",
    "gu"   -> "ぐ",
    "gwa"  -> "ぐぁ",
    "gwe"  -> "ぐぇ",
    "gwi"  -> "ぐぃ",
    "gwo"  -> "ぐぉ",
    "gwu"  -> "ぐぅ",
    "gya"  -> "ぎゃ",
    "gye"  -> "ぎぇ",
    "gyi"  -> "ぎぃ",
    "gyo"  -> "ぎょ",
    "gyu"  -> "ぎゅ",
    "ha"   -> "は",
    "he"   -> "へ",
    "hi"   -> "ひ",
    "ho"   -> "ほ",
    "hu"   -> "ふ",
    "hwa"  -> "ふぁ",
    "hwe"  -> "ふぇ",
    "hwi"  -> "ふぃ",
    "hwo"  -> "ふぉ",
    "hwyu" -> "ふゅ",
    "hya"  -> "ひゃ",
    "hye"  -> "ひぇ",
    "hyi"  -> "ひぃ",
    "hyo"  -> "ひょ",
    "hyu"  -> "ひゅ",
    "i"    -> "い",
    "ja"   -> "じゃ",
    "je"   -> "じぇ",
    "ji"   -> "じ",
    "jo"   -> "じょ",
    "ju"   -> "じゅ",
    "jya"  -> "じゃ",
    "jye"  -> "じぇ",
    "jyi"  -> "じぃ",
    "jyo"  -> "じょ",
    "jyu"  -> "じゅ",
    "ka"   -> "か",
    "ke"   -> "け",
    "ki"   -> "き",
    "ko"   -> "こ",
    "ku"   -> "く",
    "kwa"  -> "くぁ",
    "kwe"  -> "くぇ",
    "kwi"  -> "くぃ",
    "kwo"  -> "くぉ",
    "kwu"  -> "くぅ",
    "kya"  -> "きゃ",
    "kye"  -> "きぇ",
    "kyi"  -> "きぃ",
    "kyo"  -> "きょ",
    "kyu"  -> "きゅ",
    "la"   -> "ぁ",
    "le"   -> "ぇ",
    "li"   -> "ぃ",
    "lka"  -> "ヵ",
    "lke"  -> "ヶ",
    "lo"   -> "ぉ",
    "ltsu" -> "っ",
    "ltu"  -> "っ",
    "lu"   -> "ぅ",
    "lwa"  -> "ゎ",
    "lya"  -> "ゃ",
    "lye"  -> "ぇ",
    "lyi"  -> "ぃ",
    "lyo"  -> "ょ",
    "lyu"  -> "ゅ",
    "ma"   -> "ま",
    "me"   -> "め",
    "mi"   -> "み",
    "mo"   -> "も",
    "mu"   -> "む",
    "mya"  -> "みゃ",
    "mye"  -> "みぇ",
    "myi"  -> "みぃ",
    "myo"  -> "みょ",
    "myu"  -> "みゅ",
    "n"    -> "ん",
    "n'"   -> "ん",
    "na"   -> "な",
    "ne"   -> "ね",
    "ni"   -> "に",
    "nn"   -> "ん",
    "no"   -> "の",
    "nu"   -> "ぬ",
    "nya"  -> "にゃ",
    "nye"  -> "にぇ",
    "nyi"  -> "にぃ",
    "nyo"  -> "にょ",
    "nyu"  -> "にゅ",
    "o"    -> "お",
    "pa"   -> "ぱ",
    "pe"   -> "ぺ",
    "pi"   -> "ぴ",
    "po"   -> "ぽ",
    "pu"   -> "ぷ",
    "pya"  -> "ぴゃ",
    "pye"  -> "ぴぇ",
    "pyi"  -> "ぴぃ",
    "pyo"  -> "ぴょ",
    "pyu"  -> "ぴゅ",
    "qa"   -> "くぁ",
    "qe"   -> "くぇ",
    "qi"   -> "くぃ",
    "qo"   -> "くぉ",
    "qu"   -> "く",
    "ra"   -> "ら",
    "re"   -> "れ",
    "ri"   -> "り",
    "ro"   -> "ろ",
    "ru"   -> "る",
    "rya"  -> "りゃ",
    "rye"  -> "りぇ",
    "ryi"  -> "りぃ",
    "ryo"  -> "りょ",
    "ryu"  -> "りゅ",
    "sa"   -> "さ",
    "se"   -> "せ",
    "sha"  -> "しゃ",
    "she"  -> "しぇ",
    "shi"  -> "し",
    "sho"  -> "しょ",
    "shu"  -> "しゅ",
    "si"   -> "し",
    "so"   -> "そ",
    "su"   -> "す",
    "sya"  -> "しゃ",
    "sye"  -> "しぇ",
    "syi"  -> "しぃ",
    "syo"  -> "しょ",
    "syu"  -> "しゅ",
    "t'i"  -> "てぃ",
    "t'u"  -> "とぅ",
    "t'yu" -> "てゅ",
    "ta"   -> "た",
    "te"   -> "て",
    "tha"  -> "てゃ",
    "the"  -> "てぇ",
    "thi"  -> "てぃ",
    "tho"  -> "てょ",
    "thu"  -> "てゅ",
    "ti"   -> "ち",
    "to"   -> "と",
    "tsa"  -> "つぁ",
    "tse"  -> "つぇ",
    "tsi"  -> "つぃ",
    "tso"  -> "つぉ",
    "tsu"  -> "つ",
    "tu"   -> "つ",
    "twa"  -> "とぁ",
    "twe"  -> "とぇ",
    "twi"  -> "とぃ",
    "two"  -> "とぉ",
    "twu"  -> "とぅ",
    "tya"  -> "ちゃ",
    "tye"  -> "ちぇ",
    "tyi"  -> "ちぃ",
    "tyo"  -> "ちょ",
    "tyu"  -> "ちゅ",
    "u"    -> "う",
    "va"   -> "ゔぁ",
    "ve"   -> "ゔぇ",
    "vi"   -> "ゔぃ",
    "vo"   -> "ゔぉ",
    "vu"   -> "ゔ",
    "vya"  -> "ゔゃ",
    "vye"  -> "ゔぇ",
    "vyi"  -> "ゔぃ",
    "vyo"  -> "ゔょ",
    "vyu"  -> "ゔゅ",
    "wa"   -> "わ",
    "we"   -> "うぇ",
    "wha"  -> "うぁ",
    "whe"  -> "うぇ",
    "whi"  -> "うぃ",
    "who"  -> "うぉ",
    "whu"  -> "う",
    "wi"   -> "うぃ",
    "wo"   -> "を",
    "wu"   -> "う",
    "wye"  -> "ゑ",
    "wyi"  -> "ゐ",
    "xa"   -> "ぁ",
    "xe"   -> "ぇ",
    "xi"   -> "ぃ",
    "xka"  -> "ヵ",
    "xke"  -> "ヶ",
    "xn"   -> "ん",
    "xo"   -> "ぉ",
    "xtsu" -> "っ",
    "xtu"  -> "っ",
    "xu"   -> "ぅ",
    "xwa"  -> "ゎ",
    "xya"  -> "ゃ",
    "xye"  -> "ぇ",
    "xyi"  -> "ぃ",
    "xyo"  -> "ょ",
    "xyu"  -> "ゅ",
    "ya"   -> "や",
    "ye"   -> "いぇ",
    "yo"   -> "よ",
    "yu"   -> "ゆ",
    "za"   -> "ざ",
    "ze"   -> "ぜ",
    "zi"   -> "じ",
    "zo"   -> "ぞ",
    "zu"   -> "ず",
    "zya"  -> "じゃ",
    "zye"  -> "じぇ",
    "zyi"  -> "じぃ",
    "zyo"  -> "じょ",
    "zyu"  -> "じゅ"
  )

  private val maxRomajiLength: Int = table.keys.map(_.length).max

  def getMora(s: String, i: Int): (String, Int) = {
    @tailrec
    def loop(n: Int): (String, Int) =
      if (n <= 0) ("", 1)
      else
        table.get(s.substring(i, i + n)) match {
          case Some(mora) => (mora, n)
          case None       => loop(n - 1)
        }

    loop(maxRomajiLength min (s.length - i))
  }

  def romajiToHiragana(s: String): String = {
    val buffer = new StringBuilder()

    @tailrec
    def loop(i: Int): Unit = {
      val (mora, advance) = getMora(s, i)
      val j               = i + advance

      buffer.append(mora)

      if (j < s.length)
        loop(j)
    }

    loop(0)

    buffer.toString
  }

}
